*, *::after, *::before {
    box-sizing: border-box;
    font-family: Gotham Rounded, sans-serif;
  }
  
  body {
    background: linear-gradient(to right, hsl(300, 5%, 68%), hsl(175, 89%, 42%));
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 20vh;
    overflow: hidden; /* The overflow property only works for block elements with a specified height.The overflow is clipped, and the rest of the content will be invisible*/
  }
  
  .clock {
    margin-top: 25rem;
    width: 250px;
    height: 250px;
    background-color: rgba(255, 255, 255, .8);
    border-radius: 50%;
    border: 2.5px solid rgb(24, 16, 1);
    outline: #e2cd6d solid 10px;
    outline-offset: 5px;
    position: absolute; /* position is relative to its normal position*/
  }
  
  .clock .number {
    --rotation: 0;
    position: absolute; /*element can be placed anywehere on the page. they are removed from the normal flow and can overlap*/
    width: 100%;
    height: 100%;
    text-align: center;
    transform: rotate(var(--rotation)); /*Defines a 2D rotation, the angle is specified in the parameter*/
    font-size: 1.2rem;
  }
  
  .clock .number1 { --rotation: 30deg; }
  .clock .number2 { --rotation: 60deg; }
  .clock .number3 { --rotation: 90deg; }
  .clock .number4 { --rotation: 120deg; }
  .clock .number5 { --rotation: 150deg; }
  .clock .number6 { --rotation: 180deg; }
  .clock .number7 { --rotation: 210deg; }
  .clock .number8 { --rotation: 240deg; }
  .clock .number9 { --rotation: 270deg; }
  .clock .number10 { --rotation: 300deg; }
  .clock .number11 { --rotation: 330deg; }
  
  .clock .hand {
    --rotation: 0;
    position: absolute; /*With absolute positioning, an element can be placed anywhere on a page*/
    bottom: 50%;
    left: 50%;
    border: 1px solid white;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    transform-origin: bottom; /*Set a rotated element's base placement:*/
    z-index: 10; /*The z-index property specifies the stack order of an element.*/
    /*The transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements.*/
    transform: translateX(-50%) rotate(calc(var(--rotation) * 1deg)); /*The translate() CSS function repositions an element in the horizontal and/or vertical direction*/
  }
  
  .clock::after {
    content: '';
    position: absolute;
    background-color: black;
    z-index: 11;
    width: 15px;
    height: 15px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 50%;
  }
  
  .clock .hand.second {
    width: 3px;
    height: 45%;
    background-color: red;
  }
  
  .clock .hand.minute {
    width: 7px;
    height: 40%;
    background-color: black;
  }
  
  .clock .hand.hour {
    width: 10px;
    height: 35%;
    background-color: black;
  }

  .digital_clock{
    margin-top: 5rem;
    width: 550px;
    height: 150px;
    position: absolute;
    transform: translate(-50%,-50%);
    top: 50%;
    left: 50%;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .digital_clock div{
    position: relative;
    background-color: #ffffff;
    height: 100%;
    width: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: 'Open Sans',sans-serif;
    font-size: 60px;
    color: #202020;
    border-radius: 5px;
    box-shadow: 0 15px 30px rgba(219, 182, 13, 0.3);
    letter-spacing: 3px;
  }


  .digital_clock span{
    font-weight: bolder;
    font-size: 60px;
    color: #ffffff;
}